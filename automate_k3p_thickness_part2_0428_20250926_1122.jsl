// Auto-generated JSL script for K3P Thickness workflow Part 2
// Generated on: 2025-09-26 11:22:22
// Current Experiment: K3P0428
// Source CSV: K3_PC3 Results 2025-09-26_111827.csv

Print("üìè Starting K3P Thickness Workflow Part 2...");
Print("üß™ Processing experiment: K3P0428");

// Step 1: Import K3_PC3 Results CSV file
Print("üìä Importing K3_PC3 Results CSV file...");
Try(
    dt_pc3 = Open(
        "/Users/justinparayno/Desktop/Data Genie Library/K3_PC3 Results 2025-09-26_111827.csv",
        columns(
            New Column( "sampleID", Character, "Nominal" ),
            New Column( "K3_PC3 Date", Numeric, "Continuous", Format( "y/m/d", 10 ), Input Format( "y/m/d" ) ),
            New Column( "K3_PC3 Run Start Time", Character, "Nominal" ),
            New Column( "K3_PC3 Run End Time", Character, "Nominal" ),
            New Column( "K3_PC3 Session", Character, "Nominal" ),
            New Column( "K3_PC3 Session Name", Character, "Nominal" ),
            New Column( "K3_PC3 Speed in mm per min", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 Number of Passes at Nominal Speed", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 Run Count", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 Run Name", Character, "Nominal" ),
            New Column( "K3_PC3 Run Start and Name", Character, "Nominal" ),
            New Column( "K3_PC3 Thickness Control", Character, "Nominal" ),
            New Column( "K3_PC3 EDAI Target Thickness in nm", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 C60 Target Thickness in nm", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 MgF2 Target Thickness in nm", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 Source 1 Material", Character, "Nominal" ),
            New Column( "K3_PC3 Source 1 Load Brand", Character, "Nominal" ),
            New Column( "K3_PC3 Source 1 Load Product", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 Source 1 Load Batch", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 Source 1 Emptied before Reload", Character, "Nominal" ),
            New Column( "K3_PC3 Source 1 Load at Start in g", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 Source 1 Load at End in g", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 Source 2 Material", Character, "Nominal" ),
            New Column( "K3_PC3 Source 2 Load Brand", Character, "Nominal" ),
            New Column( "K3_PC3 Source 2 Load Product", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 Source 2 Load Batch", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 Source 2 Emptied before Reload", Character, "Nominal" ),
            New Column( "K3_PC3 Source 2 Load at Start in g", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 Source 2 Load at End in g", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 Source 3 Material", Character, "Nominal" ),
            New Column( "K3_PC3 Source 3 Load Brand", Character, "Nominal" ),
            New Column( "K3_PC3 Source 3 Load Product", Character, "Nominal" ),
            New Column( "K3_PC3 Source 3 Load Batch", Character, "Nominal" ),
            New Column( "K3_PC3 Source 3 Emptied before Reload", Character, "Nominal" ),
            New Column( "K3_PC3 Source 3 Load at Start in g", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 Source 3 Load at End in g", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 Source 4 Material", Character, "Nominal" ),
            New Column( "K3_PC3 Source 4 Load Brand", Character, "Nominal" ),
            New Column( "K3_PC3 Source 4 Load Product", Character, "Nominal" ),
            New Column( "K3_PC3 Source 4 Load Batch", Character, "Nominal" ),
            New Column( "K3_PC3 Source 4 Emptied before Reload", Character, "Nominal" ),
            New Column( "K3_PC3 Source 4 Load at Start in g", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 Source 4 Load at End in g", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 Source 5 Material", Character, "Nominal" ),
            New Column( "K3_PC3 Source 5 Load Brand", Character, "Nominal" ),
            New Column( "K3_PC3 Source 5 Load Product", Character, "Nominal" ),
            New Column( "K3_PC3 Source 5 Load Batch", Character, "Nominal" ),
            New Column( "K3_PC3 Source 5 Emptied before Reload", Character, "Nominal" ),
            New Column( "K3_PC3 Source 5 Load at Start in g", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 Source 5 Load at End in g", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 Source 6 Material", Character, "Nominal" ),
            New Column( "K3_PC3 Source 6 Load Brand", Character, "Nominal" ),
            New Column( "K3_PC3 Source 6 Load Product", Character, "Nominal" ),
            New Column( "K3_PC3 Source 6 Load Batch", Character, "Nominal" ),
            New Column( "K3_PC3 Source 6 Emptied before Reload", Character, "Nominal" ),
            New Column( "K3_PC3 Source 6 Load at Start in g", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 Source 6 Load at End in g", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 Source 1 Mode", Character, "Nominal" ),
            New Column( "K3_PC3 Source 2 Mode", Character, "Nominal" ),
            New Column( "K3_PC3 Source 3 Mode", Character, "Nominal" ),
            New Column( "K3_PC3 Source 4 Mode", Character, "Nominal" ),
            New Column( "K3_PC3 Source 5 Mode", Character, "Nominal" ),
            New Column( "K3_PC3 Source 6 Mode", Character, "Nominal" ),
            New Column( "K3_PC3 Power on Source 1 in %", Character, "Nominal" ),
            New Column( "K3_PC3 Power on Source 2 in %", Character, "Nominal" ),
            New Column( "K3_PC3 Power on Source 3 in %", Character, "Nominal" ),
            New Column( "K3_PC3 Power on Source 4 in %", Character, "Nominal" ),
            New Column( "K3_PC3 Power on Source 5 in %", Character, "Nominal" ),
            New Column( "K3_PC3 Power on Source 6 in %", Character, "Nominal" ),
            New Column( "K3_PC3 T Source 1 in ¬∞C", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 T Source 2 in ¬∞C", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 T Source 3 in ¬∞C", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 T Source 4 in ¬∞C", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 T Source 5 in ¬∞C", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 T Source 6 in ¬∞C", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 Median Pressure in Torr", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 QCM1 Source", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 QCM2 Source", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 QCM3 Source", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 QCM4 Source", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 QCM5 Source", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 QCM6 Source", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 QCM 1 Target Rate in √Ö per sec", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 QCM 2 Target Rate in √Ö per sec", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 QCM 3 Target Rate in √Ö per sec", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 QCM 4 Target Rate in √Ö per sec", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 QCM 5 Target Rate in √Ö per sec", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 QCM 6 Target Rate in √Ö per sec", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 Median QCM1 Rate in √Ö per sec", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 Median QCM2 Rate in √Ö per sec", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 Median QCM3 Rate in √Ö per sec", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 Median QCM4 Rate in √Ö per sec", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 Median QCM5 Rate in √Ö per sec", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 Median QCM6 Rate in √Ö per sec", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 QCM1 Frequency at Start in Hz", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 QCM2 Frequency at Start in Hz", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 QCM3 Frequency at Start in Hz", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 QCM4 Frequency at Start in Hz", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 QCM5 Frequency at Start in Hz", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 QCM6 Frequency at Start in Hz", Numeric, "Continuous", Format( "Best", 12 ) ),
            New Column( "K3_PC3 QCM1 Problem", Character, "Nominal" ),
            New Column( "K3_PC3 QCM2 Problem", Character, "Nominal" ),
            New Column( "K3_PC3 QCM3 Problem", Character, "Nominal" ),
            New Column( "K3_PC3 QCM4 Problem", Character, "Nominal" ),
            New Column( "K3_PC3 QCM5 Problem", Character, "Nominal" ),
            New Column( "K3_PC3 QCM6 Problem", Character, "Nominal" ),
            New Column( "K3_PC3 QCM Readout Software, Mode", Character, "Nominal" ),
            New Column( "K3_PC3 Process Chamber Exposed to Air before the Run", Character, "Nominal" ),
            New Column( "K3_PC3 Repairs Before the Run", Character, "Nominal" ),
            New Column( "K3_PC3 Comments", Character, "Nominal" ),
            New Column( "K3_PC3 Wafer Insert", Character, "Nominal" ),
            New Column( "K3_PC3 Wafer Holder Type Before", Character, "Nominal" ),
            New Column( "K3_PC3 Wafer Holder Type After", Character, "Nominal" ),
            New Column( "K3_PC3 carrier position", Character, "Nominal" ),
            New Column( "K3_PC3 Sideways Offset", Numeric, "Continuous", Format( "Best", 12 ) )
        )
    );
    Print("‚úÖ Successfully imported K3_PC3 Results CSV");
,
    Print("‚ùå Error importing K3_PC3 Results CSV file");
    Print("üìÅ File path: /Users/justinparayno/Desktop/Data Genie Library/K3_PC3 Results 2025-09-26_111827.csv");
    Throw();
);

// Step 2: Filter data to keep only current experiment (K3P0428)
Print("üîç Filtering data for experiment K3P0428...");
Try(
    // Select rows matching the current experiment
    dt_pc3 << Select Where( :K3_PC3 Session == "K3P0428" );
    
    // Invert selection to select all OTHER experiments
    dt_pc3 << Invert Row Selection;
    
    // Delete all other experiments (keeping only current experiment)
    dt_pc3 << Delete Rows;
    
    Print("‚úÖ Successfully filtered data for K3P0428");
    Print("üìä Rows remaining: " || Char(N Rows(dt_pc3)));
,
    Print("‚ùå Error filtering data for K3P0428");
    Throw();
);

// Step 3: Save filtered data as K3P0428 Process.jmp
Print("üíæ Saving filtered data as K3P0428 Process.jmp...");
Try(
    dt_pc3 << Save( "$HOME/Library/CloudStorage/GoogleDrive-justin.parayno@swiftsolar.com/Shared drives/R&D - Passivation/Passivation Projects 2024+/RD.E5: Process window specs and drift for inline ETL1   vendor demo/2025Q3 Data/K3P0428 Process.jmp" );
    Print("‚úÖ Successfully saved: K3P0428 Process.jmp");
,
    Print("‚ùå Error saving K3P0428 Process.jmp");
    Print("üìÅ Attempted path: $HOME/Library/CloudStorage/GoogleDrive-justin.parayno@swiftsolar.com/Shared drives/R&D - Passivation/Passivation Projects 2024+/RD.E5: Process window specs and drift for inline ETL1   vendor demo/2025Q3 Data/K3P0428 Process.jmp");
);

// Step 4: Open WDXRF and absorption table
Print("üìä Opening WDXRF and absorption table...");
Try(
    dt_wdxrf = Open( "$HOME/Library/CloudStorage/GoogleDrive-justin.parayno@swiftsolar.com/Shared drives/R&D - Passivation/Passivation Projects 2024+/RD.E5: Process window specs and drift for inline ETL1   vendor demo/2025Q3 Data/WDXRF and absorption.jmp" );
    Print("‚úÖ Successfully opened WDXRF and absorption.jmp");
,
    Print("‚ùå Error opening WDXRF and absorption.jmp");
    Print("üìÅ Path: $HOME/Library/CloudStorage/GoogleDrive-justin.parayno@swiftsolar.com/Shared drives/R&D - Passivation/Passivation Projects 2024+/RD.E5: Process window specs and drift for inline ETL1   vendor demo/2025Q3 Data/WDXRF and absorption.jmp");
    Throw();
);

// Step 5: Join tables
Print("üîó Joining WDXRF and absorption with K3P0428 Process...");
Try(
    dt_joined = dt_wdxrf << Join(
        With( dt_pc3 ),
        By Matching Columns( :Name("WDXRF sample") = :sampleID ),
        Drop multiples( 0, 0 ),
        Include Nonmatches( 0, 0 ),
        Preserve main table order( 1 ),
        Output Table( "Join of WDXRF and absorption with K3P0428 Process" )
    );
    Print("‚úÖ Successfully joined tables");
    Print("üìä Joined table rows: " || Char(N Rows(dt_joined)));
,
    Print("‚ùå Error joining tables");
    Throw();
);

// Step 6: Open existing WDXRF and absorbance with process.jmp
Print("üìä Opening existing WDXRF and absorbance with process.jmp...");
Try(
    dt_existing = Open( "$HOME/Library/CloudStorage/GoogleDrive-justin.parayno@swiftsolar.com/Shared drives/R&D - Passivation/Passivation Projects 2024+/RD.E5: Process window specs and drift for inline ETL1   vendor demo/2025Q3 Data/WDXRF and absorbance with process.jmp" );
    Print("‚úÖ Successfully opened existing WDXRF and absorbance with process.jmp");
,
    Print("‚ùå Error opening existing WDXRF and absorbance with process.jmp");
    Print("üìÅ Path: $HOME/Library/CloudStorage/GoogleDrive-justin.parayno@swiftsolar.com/Shared drives/R&D - Passivation/Passivation Projects 2024+/RD.E5: Process window specs and drift for inline ETL1   vendor demo/2025Q3 Data/WDXRF and absorbance with process.jmp");
    Throw();
);

// Step 7: Concatenate tables
Print("üìù Concatenating new data with existing table...");
Try(
    dt_existing << Concatenate(
        dt_joined,
        Output Table( "Concat of WDXRF and absorbance with process, Join of WDXRF and absorption with K3P0428 Process" ),
        Append to first table,
        Keep Formulas
    );
    Print("‚úÖ Successfully concatenated tables");
    Print("üìä Final table rows: " || Char(N Rows(dt_existing)));
,
    Print("‚ùå Error concatenating tables");
    Throw();
);

// Step 8: Copy and rename table script for current experiment
Print("üìã Setting up plot script for K3P0428...");
Try(
    // Get list of existing table scripts
    script_names = dt_existing << Get Property Names;
    previous_script = "";
    
    // Find the most recent K3P script to copy from
    For( i = 1, i <= N Items(script_names), i++,
        script_name = script_names[i];
        If( Contains(script_name, "K3P") & !Contains(script_name, "0428"),
            previous_script = script_name;
        );
    );
    
    If( previous_script != "",
        // Copy the previous script
        previous_property = dt_existing << Get Property( previous_script );
        dt_existing << Set Property( "K3P0428", previous_property );
        Print("‚úÖ Copied plot script from: " || previous_script);
    ,
        Print("‚ö†Ô∏è No previous K3P script found to copy from");
    );
,
    Print("‚ùå Error setting up plot script");
);

// Step 9: Create Graph Builder with data filter for current experiment
Print("üìà Creating Graph Builder plot for K3P0428...");
Try(
    graph_script = Graph Builder(
        Size( 800, 500 ),
        Fit to Window( "Off" ),
        Variables(
            X( :Name("K3_PC3 Sideways Offset") ),
            Y( :Name("K3_PC3 QCM 3 Target Rate in √Ö per sec") ),
            Y( :Name("K3_PC3 QCM 4 Target Rate in √Ö per sec"), Position( 1 ) ),
            Y( :Name("K3_PC3 Median QCM3 Rate in √Ö per sec"), Position( 1 ) ),
            Y( :Name("K3_PC3 Median QCM4 Rate in √Ö per sec"), Position( 1 ) ),
            Y( :Name("C60 in nm") ),
            Y( :Name("MgF2 in nm") ),
            Y( :Name("EDAI in nm") ),
            Group X( :Name("Run Start") )
        ),
        Elements(
            Position( 1, 1 ),
            Points( X, Y( 1 ), Y( 2 ), Y( 3 ), Y( 4 ), Legend( 43 ) )
        ),
        Elements( Position( 1, 2 ), Points( X, Y, Legend( 39 ) ) ),
        Elements( Position( 1, 3 ), Points( X, Y, Legend( 40 ) ) ),
        Elements( Position( 1, 4 ), Points( X, Y, Legend( 41 ) ) ),
        Local Data Filter(
            Close Outline( 1 ),
            Add Filter(
                columns( :Name("K3_PC3 Session") ),
                Where( :Name("K3_PC3 Session") == "K3P0428" ),
                Display( :Name("K3_PC3 Session"), N Items( 15 ), Find( Set Text( "" ) ) )
            )
        ),
        SendToReport(
            Dispatch( {}, "K3_PC3 Sideways Offset", ScaleBox,
                {Min( -200 ), Max( 200 ), Inc( 100 ), Minor Ticks( 4 ),
                Label Row( {Label Orientation( "Vertical" ), Show Major Grid( 1 )} )}
            ),
            Dispatch( {}, "K3_PC3 QCM 3 Target Rate in √Ö per sec", ScaleBox,
                {Format( "Fixed Dec", 12, 0 ), Min( 0 ), Max( 3 ), Inc( 1 ),
                Minor Ticks( 4 ), Label Row( {Show Major Grid( 1 ), Show Minor Grid( 1 )} )}
            ),
            Dispatch( {}, "C60 in nm", ScaleBox,
                {Min( 0 ), Max( 25 ), Inc( 5 ), Minor Ticks( 4 ),
                Add Ref Line( 14, "Sparse Dash", "Green", "", 1 ),
                Label Row( {Show Major Grid( 1 ), Show Minor Grid( 1 )} )}
            ),
            Dispatch( {}, "MgF2 in nm", ScaleBox,
                {Min( 0 ), Max( 10 ), Inc( 5 ), Minor Ticks( 4 ),
                Add Ref Line( 6, "Sparse Dash", "Green", "", 1 ),
                Label Row( {Show Major Grid( 1 ), Show Minor Grid( 1 )} )}
            ),
            Dispatch( {}, "EDAI in nm", ScaleBox,
                {Format( "Fixed Dec", 12, 0 ), Min( 0 ), Max( 4 ), Inc( 1 ),
                Minor Ticks( 4 ), Add Ref Line( 2, "Sparse Dash", "Green", "", 1 ),
                Label Row( {Show Major Grid( 1 ), Show Minor Grid( 1 )} )}
            )
        )
    );
    
    // Set the graph script as a table property
    dt_existing << Set Property( "K3P0428", graph_script );
    Print("‚úÖ Created Graph Builder plot for K3P0428");
,
    Print("‚ùå Error creating Graph Builder plot");
);

// Step 10: Save final updated table
Print("üíæ Saving final updated WDXRF and absorbance with process.jmp...");
Try(
    dt_existing << Save( "$HOME/Library/CloudStorage/GoogleDrive-justin.parayno@swiftsolar.com/Shared drives/R&D - Passivation/Passivation Projects 2024+/RD.E5: Process window specs and drift for inline ETL1   vendor demo/2025Q3 Data/WDXRF and absorbance with process.jmp" );
    Print("‚úÖ Successfully saved final updated table");
,
    Print("‚ùå Error saving final table");
    Print("üìÅ Path: $HOME/Library/CloudStorage/GoogleDrive-justin.parayno@swiftsolar.com/Shared drives/R&D - Passivation/Passivation Projects 2024+/RD.E5: Process window specs and drift for inline ETL1   vendor demo/2025Q3 Data/WDXRF and absorbance with process.jmp");
);

// Step 11: Display the graph for verification
Print("üìà Displaying Graph Builder for verification...");
Try(
    dt_existing << Run Script( "K3P0428" );
    Print("‚úÖ Graph Builder displayed successfully");
,
    Print("‚ö†Ô∏è Could not display graph - please check manually");
);

Print("üéâ K3P Thickness Workflow Part 2 Complete!");
Print("üìã Summary:");
Print("   ‚Ä¢ Imported and filtered K3_PC3 Results data for K3P0428");
Print("   ‚Ä¢ Joined with WDXRF and absorption data");
Print("   ‚Ä¢ Updated master WDXRF and absorbance with process table");
Print("   ‚Ä¢ Created plot script for K3P0428");
Print("   ‚Ä¢ Saved all updated files");
